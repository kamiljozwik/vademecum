rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

			/* User data */
      match /users/{userId} {
      	allow read;
        allow create: if isValidUser(userId);
        allow update: if request.auth.uid == userId;
      }
    
    	/* Usernames */
      match /usernames/{username} {
      	allow read;
        allow create: if isValidUsername(username);
      }
      
      /* Utils */
      function isValidUsername(username) {
				let isOwner = request.auth.uid == request.resource.data.uid;
        let isValidLength = username.size() >= 3 && username.size() <= 15;
        let isValidUserDoc = getAfter(/databases/$(database)/documents/users/$(request.auth.uid)).data.username == username;
        
        return isOwner && isValidLength && isValidUserDoc;     
      }
      
      function isValidUser(userId) {
        let isOwner = request.auth.uid == userId;
      	
        // let username = request.resource.data.username;
        // let createdValidUsername = existsAfter(/databases/$(database)/documents/usernames/$(username));
        
        // return isOwner && createdValidUsername;
        return isOwner;
      }
  }
}